-- DROP
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS bookings;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS item_requests;
DROP TABLE IF EXISTS users;

-- USERS
CREATE TABLE users (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(255) NOT NULL,
    email       VARCHAR(255) NOT NULL UNIQUE
);

-- ITEM_REQUESTS
CREATE TABLE item_requests (
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description   VARCHAR(1000) NOT NULL,
    requester_id  BIGINT NOT NULL,
    created       TIMESTAMP NOT NULL,
    CONSTRAINT fk_item_requests_requester
        FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX idx_item_requests_requester_created
    ON item_requests (requester_id, created DESC);

-- ITEMS
CREATE TABLE items (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(255) NOT NULL,
    description VARCHAR(1000),
    available   BOOLEAN NOT NULL,
    owner_id    BIGINT NOT NULL,
    request_id  BIGINT,
    CONSTRAINT fk_items_owner
        FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_items_request
        FOREIGN KEY (request_id) REFERENCES item_requests(id) ON DELETE SET NULL
);

CREATE INDEX idx_items_owner ON items(owner_id);
CREATE INDEX idx_items_request ON items(request_id);

-- BOOKINGS
CREATE TABLE bookings (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id     BIGINT NOT NULL,
    booker_id   BIGINT NOT NULL,
    start_time  TIMESTAMP NOT NULL,
    end_time    TIMESTAMP NOT NULL,
    status      VARCHAR(20) NOT NULL,
    CONSTRAINT fk_bookings_item
        FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
    CONSTRAINT fk_bookings_booker
        FOREIGN KEY (booker_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX idx_bookings_item_start ON bookings(item_id, start_time);
CREATE INDEX idx_bookings_item_end ON bookings(item_id, end_time);
CREATE INDEX idx_bookings_item_status ON bookings(item_id, status);

-- COMMENTS
CREATE TABLE comments (
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text       VARCHAR(1000) NOT NULL,
    item_id    BIGINT NOT NULL,
    author_id  BIGINT NOT NULL,
    created    TIMESTAMP NOT NULL,
    CONSTRAINT fk_comments_item
        FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_author
        FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX idx_comments_item_created ON comments(item_id, created DESC);