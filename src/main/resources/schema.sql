-- USERS
CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT uq_users_email UNIQUE (email)
);

-- ITEMS
CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(1000),
  available BOOLEAN NOT NULL,
  owner_id BIGINT NOT NULL,
  CONSTRAINT fk_items_owner FOREIGN KEY (owner_id) REFERENCES users (id)
);

CREATE INDEX IF NOT EXISTS idx_items_owner ON items(owner_id);

-- BOOKINGS
CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  start_time TIMESTAMP NOT NULL,
  end_time TIMESTAMP NOT NULL,
  item_id BIGINT NOT NULL,
  booker_id BIGINT NOT NULL,
  status VARCHAR(16) NOT NULL,
  CONSTRAINT fk_bookings_item FOREIGN KEY (item_id) REFERENCES items (id),
  CONSTRAINT fk_bookings_booker FOREIGN KEY (booker_id) REFERENCES users (id)
);

CREATE INDEX IF NOT EXISTS idx_bookings_booker ON bookings(booker_id);
CREATE INDEX IF NOT EXISTS idx_bookings_owner ON bookings(item_id);
CREATE INDEX IF NOT EXISTS idx_bookings_times ON bookings(start_time, end_time);

-- COMMENTS
CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  text VARCHAR(1024) NOT NULL,
  item_id BIGINT NOT NULL,
  author_id BIGINT NOT NULL,
  created TIMESTAMP NOT NULL,
  CONSTRAINT fk_comments_item FOREIGN KEY (item_id) REFERENCES items (id),
  CONSTRAINT fk_comments_author FOREIGN KEY (author_id) REFERENCES users (id)
);

CREATE INDEX IF NOT EXISTS idx_comments_item ON comments(item_id);